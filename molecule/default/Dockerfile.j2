# Molecule managed

{% if item.registry is defined %}
FROM {{ item.registry.url }}/{{ item.image }}
{% else %}
FROM {{ item.image }}
{% endif %}

ENV container=docker
ENV pip_packages="ansible ansible-lint"
{% if item.env is defined %}
{% for var, value in item.env.items() %}
{% if value %}
ENV {{ var }} {{ value }}
{% endif %}
{% endfor %}
{% endif %}

# Install systemd

RUN if [ $(command -v apt-get) ]; then \
        apt-get update && \
        apt-get install -y python sudo bash ca-certificates && \
        apt-get clean; \
    elif [ $(command -v dnf) ]; then \
        dnf makecache && \
        dnf --assumeyes install python3 python3-pip python3-PyYAML sudo which hostname bash systemd && \
        dnf clean all; \
    elif [ $(command -v microdnf) ]; then \
        microdnf makecache && \
        microdnf --assumeyes install python3-dnf python39 python39-pip python39-PyYAML sudo which hostname bash systemd && \
        microdnf clean all; \
    elif [ $(command -v yum) ]; then \
        yum makecache fast && \
        yum install -y python3 python3-pip python3-PyYAML python3-xml sudo yum-plugin-ovl which hostname bash systemd && \
        sed -i 's/plugins=0/plugins=1/g' /etc/yum.conf && \
        yum clean all; \
    elif [ $(command -v zypper) ]; then \
        zypper refresh && \
        zypper install -y python3 python3-pip python3-wheel python3-PyYAML sudo which hostname bash python3-xml systemd && \
        rm -f /lib/systemd/system/multi-user.target.wants/* && \
        rm -f /etc/systemd/system/*.wants/* && \
        rm -f /lib/systemd/system/local-fs.target.wants/* && \
        rm -f /lib/systemd/system/sockets.target.wants/*udev* && \
        rm -f /lib/systemd/system/sockets.target.wants/*initctl* && \
        rm -f /lib/systemd/system/basic.target.wants/* && \
        rm -f /lib/systemd/system/anaconda.target.wants/* && \
        zypper clean -a; \
    elif [ $(command -v apk) ]; then \
        apk update && \
        apk add --no-cache python sudo bash ca-certificates; \
    elif [ $(command -v xbps-install) ]; then \
        xbps-install -Syu && \
        xbps-install -y python sudo bash ca-certificates && \
        xbps-remove -O; \
    fi

# Upgrade pip to latest version.
RUN pip3 install --upgrade pip

# Install Ansible via Pip.
RUN pip3 install $pip_packages

# Disable requiretty.
RUN sed -i -e 's/^\(Defaults\s*requiretty\)/#--- \1/'  /etc/sudoers

# Install Ansible inventory file.
RUN mkdir -p /etc/ansible
RUN echo -e '[local]\nlocalhost ansible_connection=local' > /etc/ansible/hosts

VOLUME ["/sys/fs/cgroup"]
CMD ["/usr/lib/systemd/systemd", "--system"]
